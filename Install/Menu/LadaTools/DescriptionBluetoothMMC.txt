int Init(HWND m_MsgHWND) // Функция инициализации. Открывает порт и включает таймер. Возвращает 1 при удачном выполнении. m_MsgHWND - HWND которому будут отправляться сообщения. Если m_MsgHWND = 0, то сообщения будут отсылаться всем.
void SetWriteLogState(int state); // Функция включает (1) или выключает (0) запись данных в лог файл.
int Answer(); (бывшая RcvCall) // Посылает в порт команду "Принять звонок". Возвращает 1 при удачной посылке запроса.
int Terminate(); (бывшая EndCall) // Посылает в порт команду "Завершить звонок". Возвращает 1 при удачной посылке запроса.
char* GetCurrentCallNumber(); (бывшая GetIncomingCallNumber) // Возвращает указатель на массив, хранящий номер звонящего в формате ASCII.
int Dial(char* m_numstr); // Набирает номер телефона m_numstr
int GetCallState(); // Возвращает состояние звонка: 0 - нет данных;
                                                    1 - нет соединения с телефоном;
                                                    2 - установлено соединение с телефоном;
                                                    3 - нет активных вызовов;
                                                    4 - исходящий вызов;
                                                    5 - входящий вызов;
                                                    6 - активный вызов.
char* GetLocalDeviceName(); // Возвращает указатель на массив, хранящий имя устройства в ASCII
char* GetLocalPinCode(); // Возвращает указатель на массив, хранящий PIN-код устройства в ASCII
int SetLocalDeviceName(char* m_namestr); // Записывает указанное имя устройства
int SetPinCode(char* m_pinstr); // Записывает указанный PIN-код устройства
int SetPinCodeAuto(); // Записывает PIN-код устройства "0000"
int VoiceOutPath(int m_path); // Переключение направления звука (0 - звук в телефон, 1 - звук в ММС)
int SetVisibility(int m_vis); // Установка видимости ММС в окружении Bluetooth (0 - невидим, 2 - ?, 3 - видимый для всех?)
int AVRCPCmd(int m_cmd); // Послать команду управления треками 
          0 : Stop ?
          1 : Play
          2 : Pause ?
          3 : Forward
          4 : Backward
          5 : Exit ?


#define WM_BT_CHANGE_STATE (WM_USER+1) // Сообщение об изменении состояния звонка
#define WM_BT_INCOMING_CALL (WM_USER+2) // Сообщение о входящем звонке
#define WM_BT_END_CALL (WM_USER+3) // Сообщение о завершении вызова
#define WM_BT_DETECTED_CALL_NUMBER (WM_USER+4) // Сообщение об определении номера звонящего абонента

